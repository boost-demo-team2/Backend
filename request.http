### 1. 서버가 정상적으로 실행 중인지 확인
GET http://localhost:3000/
Content-Type: application/json

### 1) 그룹 생성
POST http://localhost:3000/api/groups
Content-Type: application/json

{
  "groupName": "테스트 그룹3",
  "password": "testpassword",
  "image": "test-image-url",
  "isPublic": true,
  "introduction": "이것은 테스트 그룹입니다."
}

### 2) 그룹 목록 조회 
GET http://localhost:3000/api/groups?page=1&pageSize=10
Content-Type: application/json

### 3) 그룹 수정
PUT http://localhost:3000/api/groups/12
Content-Type: application/json

{
  "groupId": 12,
  "password": "testpassword",
  "groupName": "수정된 그룹 이름",
  "description": "수정된 설명",
  "isPublic": false
}

### 4) 그룹 삭제
DELETE http://localhost:3000/api/groups/12
Content-Type: application/json

{
  "groupId": 1,
  "password": "testpassword"
}

### 5) 그룹 상세 정보 확인
GET http://localhost:3000/api/groups/19

### 6) 그룹 조회 권한 확인
POST http://localhost:3000/api/groups/19/verify-password
Content-Type: application/json

{
  "password": "groupPassword"
}

### 7) 그룹 공감하기
POST http://localhost:3000/api/groups/19/like
Content-Type: application/json


### 8) 그룹 공개 여부 확인
GET http://localhost:3000/api/groups/19/is-public
Content-Type: application/json

### POST #########################################

### 5. 특정 그룹 (예: 1번 그룹)에 게시글 생성 1
POST http://localhost:3000/api/posts/groups/13/posts
Content-Type: application/json

{
  "nickname": "작성자1",
  "title": "3 번째 게시글",
  "image": "post-image-url",
  "content": "이것은 첫 번째 게시글입니다.",
  "tags": "태그1, 태그2",
  "location": "서울",
  "moment": "2025-02-20",
  "isPublic": true,
  "password": "postpassword"
}


### 게시글 생성 2 (id 13)
POST http://localhost:3000/api/posts/groups/13/posts
Content-Type: application/json

{
  "nickname": "작성자1",
  "title": "2 번째 게시글",
  "image": "post-image-url",
  "content": "이것은 2 번째 게시글입니다.",
  "tags": "태그1, 태그2",
  "location": "서울",
  "moment": "2025-02-20",
  "isPublic": true,
  "password": "postpassword"
}

### 6. 특정 그룹(groupId: 13) 내 게시글 목록 조회
GET http://localhost:3000/api/posts/groups/13/posts
Content-Type: application/json


### 7. 특정 게시글 조회 (예: postId: 1)
GET http://localhost:3000/api/posts/1
Content-Type: application/json

### 8. 게시글 수정 (예: postId: 1)
PUT http://localhost:3000/api/posts/1
Content-Type: application/json

{
  "password": "postpassword",
  "title": "1번째 게시글 수정된 수정 (제목)",
  "content": "수정(1)된 내용입니다.",
  "tags": "수정된 태그",
  "location": "인천",
  "moment": "2025-02-21",
  "isPublic": true
}

### 9. 게시글 삭제 (예: postId = 1)
DELETE http://localhost:3000/api/posts/1
Content-Type: application/json

{
  "password": "postpassword"
}

### 10. 게시글 비밀번호 확인 (예: postId = 2)
POST http://localhost:3000/api/posts/2/verify-password
Content-Type: application/json

{
  "password": "postpassword"
}

### 11. 게시글 공감 수 증가 (예: postId = 1)
POST http://localhost:3000/api/posts/1/like
Content-Type: application/json

### 12. 게시글 공개 여부 확인 (예: postId = 2)
GET http://localhost:3000/api/posts/2/is-public
Content-Type: application/json

### COMMENT #########################################
### 1. 댓글 작성 (POST)
POST http://localhost:3000/api/comments/2/comments
Content-Type: application/json

{
  "nickname": "테스트유저",
  "content": "이것은 테스트 댓글입니다.",
  "password": "test1234"
}


### 2. 특정 게시글의 댓글 목록 조회 (GET)
GET http://localhost:3000/api/comments/2/comments
Content-Type: application/json

### 3. 댓글 수정 (PUT)
PUT http://localhost:3000/api/comments/3
Content-Type: application/json

{
  "password": "test1234",
  "content": "수정된 댓글 내용입니다."
}

### 4. 댓글 삭제 (DELETE)
DELETE http://localhost:3000/api/comments/3
Content-Type: application/json

{
  "password": "test1234"
}

### IMAGE #########################################
// 이미지 생성
POST http://localhost:3000/api/image
Content-Type: multipart/form-data; boundary=boundary123

--boundary123
Content-Disposition: form-data; name="image"; filename="testImage.png"
Content-Type: image/png

< C:\Users\juyeo\Desktop\testImage.png
--boundary123--